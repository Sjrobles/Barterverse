openapi: 3.0.3
info:
  title: Barter API
  description: API para un sistema de trueques que permite a los usuarios registrar, explorar, negociar y cerrar intercambios de productos o servicios.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Servidor local
  - url: https://api.barter.com
    description: Servidor de producción
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - username
    Offer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        category:
          type: string
        location:
          type: object
          properties:
            latitude:
              type: number
            longitude:
              type: number
        images:
          type: array
          items:
            type: string
            format: uri
        conditions:
          type: string
        status:
          type: string
          enum: [active, pending, closed]
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - title
        - description
        - category
        - status
    Message:
      type: object
      properties:
        id:
          type: string
          format: uuid
        offerId:
          type: string
          format: uuid
        senderId:
          type: string
          format: uuid
        receiverId:
          type: string
          format: uuid
        content:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - offerId
        - senderId
        - receiverId
        - content
    Negotiation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        offerId:
          type: string
          format: uuid
        proposerId:
          type: string
          format: uuid
        receiverId:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, accepted, rejected]
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - offerId
        - proposerId
        - receiverId
        - status
    Rating:
      type: object
      properties:
        id:
          type: string
          format: uuid
        tradeId:
          type: string
          format: uuid
        raterId:
          type: string
          format: uuid
        ratedUserId:
          type: string
          format: uuid
        score:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - tradeId
        - raterId
        - ratedUserId
        - score
    Trade:
      type: object
      properties:
        id:
          type: string
          format: uuid
        offerId:
          type: string
          format: uuid
        proposerId:
          type: string
          format: uuid
        receiverId:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, completed]
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - offerId
        - proposerId
        - receiverId
        - status
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - message
        - code
paths:
  /auth/register:
    post:
      summary: Registrar un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                username:
                  type: string
              required:
                - email
                - password
                - username
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error en los datos proporcionados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /offers:
    post:
      summary: Crear una nueva oferta de trueque
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Offer'
      responses:
        '201':
          description: Oferta creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Buscar ofertas de trueque
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: keyword
          in: query
          schema:
            type: string
        - name: latitude
          in: query
          schema:
            type: number
        - name: longitude
          in: query
          schema:
            type: number
        - name: radius
          in: query
          schema:
            type: number
      responses:
        '200':
          description: Lista de ofertas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer'
  /offers/{id}:
    get:
      summary: Obtener detalles de una oferta
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Detalles de la oferta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Offer'
        '404':
          description: Oferta no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages:
    post:
      summary: Enviar un mensaje en una negociación
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: Mensaje enviado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /negotiations:
    post:
      summary: Iniciar una negociación
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Negotiation'
      responses:
        '201':
          description: Negociación iniciada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Negotiation'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trades:
    post:
      summary: Cerrar un trueque
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trade'
      responses:
        '201':
          description: Trueque cerrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ratings:
    post:
      summary: Calificar un usuario tras un trueque
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          description: Calificación registrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /admin/offers:
    get:
      summary: Listar todas las ofertas (panel de administración)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de todas las ofertas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offer'
        '403':
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'